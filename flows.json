[
    {
        "id": "55b2ce4ea70984fe",
        "type": "tab",
        "label": "Server",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "838e54b719ad8caa",
        "type": "tab",
        "label": "Netzwerk",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5d3034dc83dfbde2",
        "type": "tab",
        "label": "DB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "56fe256bdc6888ea",
        "type": "tab",
        "label": "Power Management",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2a14cb53da10968a",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "c44e7fbcfa9eb5ba"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 640,
                "y": 40,
                "wires": [
                    {
                        "id": "ae6b9eec80b9e3bc",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "8e35ff28fa9d3a76",
        "type": "group",
        "z": "838e54b719ad8caa",
        "name": "",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "fill-opacity": "0.51"
        },
        "nodes": [
            "bb365524f4051b03",
            "bed83e8525383d7f",
            "b14f5f1a0678a762",
            "97f6d413dc809019",
            "ced57a5f39c0999b",
            "9482d54a3342bafd",
            "7ea94c6be75dbe55",
            "eaacb4e3ebe5efde",
            "f439c74ac4bd2f32",
            "e17c278db83e40ef",
            "b1ef769e563322d0",
            "26eea8dbc2cf4d20",
            "70b6a07615db8980"
        ],
        "x": 154,
        "y": 39
    },
    {
        "id": "89199902fcdf75a8",
        "type": "group",
        "z": "838e54b719ad8caa",
        "name": "",
        "style": {
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "label": true,
            "fill-opacity": "0.49"
        },
        "nodes": [
            "6dc9de411da24725",
            "3e926d2fc9bc5dcf",
            "5f8fa0c6c734d247",
            "780f1733ac8f59d3",
            "0b10820ae0bca9b6",
            "967ead936df91cca",
            "917db0260446598f",
            "4c0c666ba22fbc90",
            "3ce2fcefd9d45e8c",
            "1c47cae84a9535b8",
            "de62a886d974dd24",
            "ee8cb9783b54dcf7"
        ],
        "x": 154,
        "y": 419
    },
    {
        "id": "69570ac14998a30b",
        "type": "group",
        "z": "56fe256bdc6888ea",
        "name": "",
        "style": {
            "stroke": "#777777",
            "fill": "#d1d1d1",
            "fill-opacity": "0.42",
            "label": true
        },
        "nodes": [
            "2ef8075276287a84",
            "9ad752c7eb2f77c6",
            "94d5443828424b63",
            "e3a1c266dd789867",
            "3af81448c05df57a",
            "5f0478b99f6bcbe2",
            "9b74d88b44c7ad75",
            "b78e456aca118fb3",
            "3973b7e4608c75ab",
            "e6b116c3c3a0bbe6"
        ],
        "x": 114,
        "y": 1239,
        "w": 732,
        "h": 242
    },
    {
        "id": "bdd517b93ca42ddf",
        "type": "group",
        "z": "56fe256bdc6888ea",
        "name": "",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "fill-opacity": "0.48",
            "label": true
        },
        "nodes": [
            "2b1b2c4302317ef9",
            "fe20e42f5546c86e",
            "24a99a43b6fd867b",
            "9a61e006b06aea53",
            "a591606526e6c6e1",
            "455ad6e4f3c1a6c2",
            "6bc8cd7a7aa88c70",
            "65871ea9527c1ea3"
        ],
        "x": 114,
        "y": 59,
        "w": 1632,
        "h": 202
    },
    {
        "id": "b885f38124686d57",
        "type": "group",
        "z": "55b2ce4ea70984fe",
        "name": "Web Server",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "fill-opacity": "0.48",
            "label": true
        },
        "nodes": [
            "18714dd186fd682c",
            "b9cf832bb689f99d",
            "62cb54b2da55f518",
            "40548839ac496a07"
        ],
        "x": 54,
        "y": 139,
        "w": 872,
        "h": 82
    },
    {
        "id": "fc2cb2ff3b2df9ef",
        "type": "group",
        "z": "56fe256bdc6888ea",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e85747894aceec43",
            "bd1d5435acad84d6",
            "2c01aa955659f634",
            "ea629855e546870b",
            "bfd408908909c8f6",
            "40e0e3149ced7e58",
            "feddcaf095aaba6f",
            "f8855c74fcdf9766",
            "4ea50d0d4145cfa9",
            "f87a3a14e4c84c77",
            "5e56578f2c78f47d",
            "b0a4c113bcfd75d1",
            "927615031fb184de",
            "c811bdda2c2e41dc",
            "272e6cb5dee9ba4c",
            "5eb7685e8e5bbc85",
            "33762853f8fd0635",
            "10928063098554dd",
            "1a1cf964fd8edaf0",
            "a67b5a153e359c44",
            "367781f0503baadb",
            "e8e5cb8219247199",
            "198550b3bf6c8b23",
            "72df1a9f84434816",
            "6381be337809da09",
            "20921d3736e8d107",
            "2796066df1a2e319",
            "f131cc992d7af3be",
            "c01ff320764ef67f",
            "712dd35a6f7645a7",
            "67f0f50d1f3e59c5",
            "6dd2888976cb3d05",
            "40f2815f320a7491",
            "82162ffd23778a1f",
            "6cd10282e0de543b",
            "d3d96a5c0c10b29f",
            "4a25446c0c4da559",
            "c9332917b00e8832"
        ],
        "x": 114,
        "y": 359,
        "w": 3012,
        "h": 542
    },
    {
        "id": "27cfd54d06969523",
        "type": "group",
        "z": "56fe256bdc6888ea",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7d90581007d7da7f",
            "32519552d91806ad",
            "09f7804909e0af20",
            "5ad95efe7cc760f3",
            "fc6d41b917715a63",
            "81e58d3615229780",
            "9a5677174650b892",
            "55099211e08bdcb5",
            "c40620de0f616fc8",
            "2ea929b1ffe168fb",
            "f6be19d698c8e981",
            "bc0ec04e16a6089e",
            "4a061ccc7f34d9dd",
            "f53a46c755b4cebd",
            "7047bcea21dc8e0d"
        ],
        "x": 114,
        "y": 939,
        "w": 2432,
        "h": 222
    },
    {
        "id": "fe1131055cdbcae8",
        "type": "sqliteQueuedDb",
        "db": "db",
        "mode": "RWC"
    },
    {
        "id": "189d98b6e10797a1",
        "type": "serial-port",
        "serialport": "/dev/ttyAMA0/",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "ae6b9eec80b9e3bc",
        "type": "function",
        "z": "2a14cb53da10968a",
        "name": "format directory path",
        "func": "\nmsg.database = msg.projectdir + \"/db\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c44e7fbcfa9eb5ba",
        "type": "projectdir",
        "z": "2a14cb53da10968a",
        "name": "Get local project directory",
        "x": 230,
        "y": 60,
        "wires": [
            [
                "ae6b9eec80b9e3bc"
            ]
        ]
    },
    {
        "id": "18714dd186fd682c",
        "type": "uibuilder",
        "z": "55b2ce4ea70984fe",
        "g": "b885f38124686d57",
        "name": "",
        "topic": "",
        "url": "bauer_planer",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "5.0.2",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "62cb54b2da55f518"
            ],
            []
        ]
    },
    {
        "id": "44b6d9dfd4aa2217",
        "type": "inject",
        "z": "55b2ce4ea70984fe",
        "name": "Entering UserID",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 540,
        "y": 560,
        "wires": [
            [
                "b0e2bc9f8fc76f94"
            ]
        ]
    },
    {
        "id": "46b565f5b7d79c2a",
        "type": "debug",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 420,
        "wires": []
    },
    {
        "id": "0b39fa65ad79fce4",
        "type": "queuedsqlite",
        "z": "55b2ce4ea70984fe",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db_1",
        "x": 1250,
        "y": 420,
        "wires": [
            [
                "46b565f5b7d79c2a"
            ]
        ]
    },
    {
        "id": "b0e2bc9f8fc76f94",
        "type": "function",
        "z": "55b2ce4ea70984fe",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"SELECT maschinenName, beginn, ende, dauer, strom FROM user JOIN data USING (userID) WHERE userID =\" + msg.payload +\"  ORDER BY beginn \"}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 560,
        "wires": [
            [
                "811c802b0d934a99"
            ]
        ]
    },
    {
        "id": "3a10714787bee759",
        "type": "inject",
        "z": "55b2ce4ea70984fe",
        "name": "All Users",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT *  FROM user;",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 360,
        "wires": [
            [
                "811c802b0d934a99"
            ]
        ]
    },
    {
        "id": "2edb639bd257d991",
        "type": "inject",
        "z": "55b2ce4ea70984fe",
        "name": "All Machines",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT *  FROM maschine;",
        "payload": "",
        "payloadType": "date",
        "x": 530,
        "y": 400,
        "wires": [
            [
                "811c802b0d934a99"
            ]
        ]
    },
    {
        "id": "1701a6d145bfcd8e",
        "type": "inject",
        "z": "55b2ce4ea70984fe",
        "name": "Entering maschinenName",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "test maschine",
        "payloadType": "str",
        "x": 570,
        "y": 640,
        "wires": [
            [
                "bd4862c9be46482e"
            ]
        ]
    },
    {
        "id": "bd4862c9be46482e",
        "type": "function",
        "z": "55b2ce4ea70984fe",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"SELECT userID, beginn, ende, dauer, strom FROM data JOIN maschine USING (maschinenName) WHERE maschinenName = '\"+ msg.payload +\"' ORDER BY beginn \"}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 640,
        "wires": [
            [
                "811c802b0d934a99"
            ]
        ]
    },
    {
        "id": "579a0337dae55ba4",
        "type": "inject",
        "z": "55b2ce4ea70984fe",
        "name": "Entering UserID",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 540,
        "y": 600,
        "wires": [
            [
                "aff8f192bd26e595"
            ]
        ]
    },
    {
        "id": "aff8f192bd26e595",
        "type": "function",
        "z": "55b2ce4ea70984fe",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"SELECT *  FROM user where userID=\" + msg.payload +\"\" };\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 600,
        "wires": [
            [
                "811c802b0d934a99"
            ]
        ]
    },
    {
        "id": "faebd21155e2f9c9",
        "type": "comment",
        "z": "55b2ce4ea70984fe",
        "name": "Alle Einträge von einem User:",
        "info": "",
        "x": 300,
        "y": 560,
        "wires": []
    },
    {
        "id": "3f6c813bed70996b",
        "type": "comment",
        "z": "55b2ce4ea70984fe",
        "name": "Persönliche Daten eines Nutzers zurück geben:",
        "info": "",
        "x": 240,
        "y": 600,
        "wires": []
    },
    {
        "id": "778da196e9fffb05",
        "type": "comment",
        "z": "55b2ce4ea70984fe",
        "name": "Alle Einträge zu einer Maschine:",
        "info": "",
        "x": 290,
        "y": 640,
        "wires": []
    },
    {
        "id": "bd1c0a181590c091",
        "type": "inject",
        "z": "55b2ce4ea70984fe",
        "name": "Anzahl der Nutzer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT COUNT(*) FROM user",
        "payload": "",
        "payloadType": "date",
        "x": 550,
        "y": 440,
        "wires": [
            [
                "811c802b0d934a99"
            ]
        ]
    },
    {
        "id": "65890cc37262a4d6",
        "type": "inject",
        "z": "55b2ce4ea70984fe",
        "name": "Anzahl der Maschinen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT COUNT(*) FROM maschine",
        "payload": "",
        "payloadType": "date",
        "x": 560,
        "y": 480,
        "wires": [
            [
                "811c802b0d934a99"
            ]
        ]
    },
    {
        "id": "7359b62f55b4481c",
        "type": "inject",
        "z": "55b2ce4ea70984fe",
        "name": "Summe von Dauer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT SUM(dauer) FROM data",
        "payload": "",
        "payloadType": "date",
        "x": 550,
        "y": 520,
        "wires": [
            [
                "811c802b0d934a99"
            ]
        ]
    },
    {
        "id": "1b550d472f923888",
        "type": "comment",
        "z": "55b2ce4ea70984fe",
        "name": "DB Queries:",
        "info": "## ",
        "x": 150,
        "y": 360,
        "wires": []
    },
    {
        "id": "811c802b0d934a99",
        "type": "subflow:2a14cb53da10968a",
        "z": "55b2ce4ea70984fe",
        "name": "find db path in local directory",
        "x": 1040,
        "y": 420,
        "wires": [
            [
                "0b39fa65ad79fce4"
            ]
        ]
    },
    {
        "id": "b9cf832bb689f99d",
        "type": "queuedsqlite",
        "z": "55b2ce4ea70984fe",
        "g": "b885f38124686d57",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db_1",
        "x": 630,
        "y": 180,
        "wires": [
            [
                "18714dd186fd682c",
                "40548839ac496a07"
            ]
        ]
    },
    {
        "id": "62cb54b2da55f518",
        "type": "subflow:2a14cb53da10968a",
        "z": "55b2ce4ea70984fe",
        "g": "b885f38124686d57",
        "name": "find db path in local directory",
        "x": 420,
        "y": 180,
        "wires": [
            [
                "b9cf832bb689f99d"
            ]
        ]
    },
    {
        "id": "40548839ac496a07",
        "type": "debug",
        "z": "55b2ce4ea70984fe",
        "g": "b885f38124686d57",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 180,
        "wires": []
    },
    {
        "id": "6dc9de411da24725",
        "type": "http response",
        "z": "838e54b719ad8caa",
        "g": "89199902fcdf75a8",
        "name": "HTTP Antwort an den Mikrocontroller",
        "statusCode": "200",
        "headers": {},
        "x": 1630,
        "y": 560,
        "wires": []
    },
    {
        "id": "3e926d2fc9bc5dcf",
        "type": "http in",
        "z": "838e54b719ad8caa",
        "g": "89199902fcdf75a8",
        "name": "",
        "url": "/logout",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 250,
        "y": 500,
        "wires": [
            [
                "5f8fa0c6c734d247"
            ]
        ]
    },
    {
        "id": "5f8fa0c6c734d247",
        "type": "function",
        "z": "838e54b719ad8caa",
        "g": "89199902fcdf75a8",
        "name": "Machinennamen dekodieren",
        "func": "\nmsg.payload.machineName = decodeURIComponent(escape(msg.payload.machineName));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 560,
        "wires": [
            [
                "0b10820ae0bca9b6"
            ]
        ]
    },
    {
        "id": "780f1733ac8f59d3",
        "type": "comment",
        "z": "838e54b719ad8caa",
        "g": "89199902fcdf75a8",
        "name": "Hinweis",
        "info": "Der Mikrocontroller sendet einen GET Request an die Domain http://(IP des eigenen Rechners):1880/sendData.\n\nDabei werden ein paar Daten angehängt.\nDiese können dann in der Funktion über den Message Payload abgefragt werden.\n\nDie Funktion kann als Vorlage für den eigentlichen Server verwendet werden oder einfach nur zum Testen.",
        "x": 230,
        "y": 460,
        "wires": []
    },
    {
        "id": "bb365524f4051b03",
        "type": "http response",
        "z": "838e54b719ad8caa",
        "g": "8e35ff28fa9d3a76",
        "name": "HTTP Antwort an den Mikrocontroller",
        "statusCode": "200",
        "headers": {},
        "x": 1170,
        "y": 160,
        "wires": []
    },
    {
        "id": "bed83e8525383d7f",
        "type": "debug",
        "z": "838e54b719ad8caa",
        "g": "8e35ff28fa9d3a76",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 100,
        "wires": []
    },
    {
        "id": "b14f5f1a0678a762",
        "type": "http in",
        "z": "838e54b719ad8caa",
        "g": "8e35ff28fa9d3a76",
        "name": "",
        "url": "/checkIfUserExists",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 160,
        "wires": [
            [
                "97f6d413dc809019"
            ]
        ]
    },
    {
        "id": "97f6d413dc809019",
        "type": "function",
        "z": "838e54b719ad8caa",
        "g": "8e35ff28fa9d3a76",
        "name": "Daten Auslesen und Querry bauen",
        "func": "var userID = msg.payload.userid;\nvar maschineName = decodeURIComponent(escape(msg.payload.machineName));\n\nmsg.topic = \"SELECT ( SELECT COUNT(*) FROM user WHERE userid =\"+userID+\") AS userExists, (SELECT count(*) FROM user JOIN machine on (user.permission >= machine.permission) WHERE userid =\"+userID+\" AND machineName='\"+maschineName+\"') as permissionIsHighEnough\";\n\nvar requestParameterObject = {\n    userID: userID,\n    machineName: maschineName,\n    ipAdress: null\n}\n\nmsg.requestParameter = requestParameterObject;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 160,
        "wires": [
            [
                "bed83e8525383d7f",
                "eaacb4e3ebe5efde"
            ]
        ]
    },
    {
        "id": "ced57a5f39c0999b",
        "type": "debug",
        "z": "838e54b719ad8caa",
        "g": "8e35ff28fa9d3a76",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 80,
        "wires": []
    },
    {
        "id": "9482d54a3342bafd",
        "type": "comment",
        "z": "838e54b719ad8caa",
        "g": "8e35ff28fa9d3a76",
        "name": "Payload von msg wird an MC gesendet!",
        "info": "",
        "x": 1170,
        "y": 120,
        "wires": []
    },
    {
        "id": "7ea94c6be75dbe55",
        "type": "queuedsqlite",
        "z": "838e54b719ad8caa",
        "g": "8e35ff28fa9d3a76",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 890,
        "y": 160,
        "wires": [
            [
                "bb365524f4051b03",
                "ced57a5f39c0999b",
                "f439c74ac4bd2f32"
            ]
        ]
    },
    {
        "id": "eaacb4e3ebe5efde",
        "type": "subflow:2a14cb53da10968a",
        "z": "838e54b719ad8caa",
        "g": "8e35ff28fa9d3a76",
        "name": "find db path in local directory",
        "x": 620,
        "y": 220,
        "wires": [
            [
                "7ea94c6be75dbe55"
            ]
        ]
    },
    {
        "id": "0b10820ae0bca9b6",
        "type": "collection",
        "z": "838e54b719ad8caa",
        "g": "89199902fcdf75a8",
        "name": "Eintrag auslesen",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": false,
        "action": "get value",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "payload.machineName",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "msg",
        "outputs": 1,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "967ead936df91cca"
            ]
        ]
    },
    {
        "id": "967ead936df91cca",
        "type": "function",
        "z": "838e54b719ad8caa",
        "g": "89199902fcdf75a8",
        "name": "Eintrag in DB schreiben",
        "func": "var userID = msg.payload.userID;\n\nvar machineName = msg.payload.machineName;\n\nvar setupDuration = msg.payload.setupDuration;\n\nvar startMessuringTime = msg.payload.startMessuringTime;\n\nvar messuringDuration = msg.payload.messuringDuration;\n\nvar power = msg.payload.energy;\n\n//Strings wie machinenName muss in Anführungszeichen gesetzt werden. Das ASCII Zeichen dafür ist '\\u0022'\nmsg.topic = \"INSERT INTO data VALUES (\" + userID + \",\" + '\\u0022' + maschineName + '\\u0022' + \",\" + startMessuringTime + \",\" + (startMessuringTime + messuringDuration) + \",\" + setupDuration + \",\" + messuringDuration + \",\" + power + \")\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 560,
        "wires": [
            [
                "917db0260446598f",
                "3ce2fcefd9d45e8c"
            ]
        ]
    },
    {
        "id": "917db0260446598f",
        "type": "subflow:2a14cb53da10968a",
        "z": "838e54b719ad8caa",
        "g": "89199902fcdf75a8",
        "name": "find db path in local directory",
        "x": 960,
        "y": 560,
        "wires": [
            [
                "4c0c666ba22fbc90"
            ]
        ]
    },
    {
        "id": "4c0c666ba22fbc90",
        "type": "queuedsqlite",
        "z": "838e54b719ad8caa",
        "g": "89199902fcdf75a8",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 1170,
        "y": 560,
        "wires": [
            [
                "de62a886d974dd24",
                "6dc9de411da24725"
            ]
        ]
    },
    {
        "id": "3ce2fcefd9d45e8c",
        "type": "function",
        "z": "838e54b719ad8caa",
        "g": "89199902fcdf75a8",
        "name": "Properties im Eintrag zurück setzten",
        "func": "\nvar returnObject = {\n    machineName: msg.machineName,\n    userID: 100, \n    startMessuringTime: null,\n    messuringDuration: null,\n    lastMessuringTime: null, \n    setupStartTime: null, \n    setupDuration: null, \n    energy: null,\n    ip: null\n}\n\nmsg.payload = returnObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 500,
        "wires": [
            [
                "1c47cae84a9535b8"
            ]
        ]
    },
    {
        "id": "1c47cae84a9535b8",
        "type": "collection",
        "z": "838e54b719ad8caa",
        "g": "89199902fcdf75a8",
        "name": "Eintrag zurücksetzten",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": false,
        "action": "set",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "payload.machineName",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "msg",
        "outputs": 1,
        "x": 1280,
        "y": 500,
        "wires": [
            [
                "de62a886d974dd24"
            ]
        ]
    },
    {
        "id": "de62a886d974dd24",
        "type": "debug",
        "z": "838e54b719ad8caa",
        "g": "89199902fcdf75a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 500,
        "wires": []
    },
    {
        "id": "ee8cb9783b54dcf7",
        "type": "comment",
        "z": "838e54b719ad8caa",
        "g": "89199902fcdf75a8",
        "name": "TODO Ende muss noch aus DB raus!",
        "info": "",
        "x": 990,
        "y": 460,
        "wires": []
    },
    {
        "id": "f439c74ac4bd2f32",
        "type": "switch",
        "z": "838e54b719ad8caa",
        "g": "8e35ff28fa9d3a76",
        "name": "Eintrag in der Datenbank gefunden",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1160,
        "y": 220,
        "wires": [
            [
                "26eea8dbc2cf4d20"
            ]
        ]
    },
    {
        "id": "e17c278db83e40ef",
        "type": "function",
        "z": "838e54b719ad8caa",
        "g": "8e35ff28fa9d3a76",
        "name": "Eintrag um Messwerte erweitern",
        "func": "var setupStartTime = new Date().getTime();\n\nmsg.payload.userID = msg.requestParameter.userID;\nmsg.payload.setupStartTime = setupStartTime;\n\n//TODO add ip!!!\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 220,
        "wires": [
            [
                "b1ef769e563322d0"
            ]
        ]
    },
    {
        "id": "b1ef769e563322d0",
        "type": "collection",
        "z": "838e54b719ad8caa",
        "g": "8e35ff28fa9d3a76",
        "name": "Eintrag erweitern",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": false,
        "action": "set",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "payload.machineName",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "msg",
        "outputs": 1,
        "x": 1670,
        "y": 280,
        "wires": [
            [
                "70b6a07615db8980"
            ]
        ]
    },
    {
        "id": "26eea8dbc2cf4d20",
        "type": "collection",
        "z": "838e54b719ad8caa",
        "g": "8e35ff28fa9d3a76",
        "name": "Eintrag auslesen",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": false,
        "action": "get value",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "requestParameter.machineName",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "msg",
        "outputs": 1,
        "x": 1310,
        "y": 280,
        "wires": [
            [
                "e17c278db83e40ef"
            ]
        ]
    },
    {
        "id": "70b6a07615db8980",
        "type": "debug",
        "z": "838e54b719ad8caa",
        "g": "8e35ff28fa9d3a76",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 220,
        "wires": []
    },
    {
        "id": "7dbfda298598df33",
        "type": "debug",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1370,
        "y": 640,
        "wires": []
    },
    {
        "id": "113384eeabf2d6ab",
        "type": "change",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "INSERT INTO data VALUES(1233, \"test maschine\", '2022-06-10 10:00:00', '2022-06-10 13:00:00', '05:00',1200)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 680,
        "wires": [
            [
                "e937772d22519e6e"
            ]
        ]
    },
    {
        "id": "51843fcc4399d7e3",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "\\Users\\JT\\.node-red/projects/Werkstatt-Monitoring/db",
        "sql": "",
        "name": "db",
        "x": 1050,
        "y": 360,
        "wires": [
            [
                "592c2a26032f0e03"
            ]
        ]
    },
    {
        "id": "c297898b3378f444",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 1050,
        "y": 640,
        "wires": [
            [
                "7dbfda298598df33",
                "113384eeabf2d6ab"
            ]
        ]
    },
    {
        "id": "e937772d22519e6e",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 1210,
        "y": 680,
        "wires": [
            [
                "7dbfda298598df33"
            ]
        ]
    },
    {
        "id": "592c2a26032f0e03",
        "type": "debug",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 360,
        "wires": []
    },
    {
        "id": "3e0b1745bd9ae8a6",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Tabellen erstellen:",
        "info": "",
        "x": 90,
        "y": 20,
        "wires": []
    },
    {
        "id": "56842f810de98ca1",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Testdaten eintragen:",
        "info": "",
        "x": 90,
        "y": 300,
        "wires": []
    },
    {
        "id": "fce43113bdb47fc2",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "FK muss bei jedem INSERT aktiviert werden",
        "info": "",
        "x": 1650,
        "y": 520,
        "wires": []
    },
    {
        "id": "f3603b354c734e1e",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Tabellen löschen:",
        "info": "",
        "x": 120,
        "y": 860,
        "wires": []
    },
    {
        "id": "ee6134b131a39da8",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "CREATE user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE user( userid INTEGER PRIMARY KEY AUTOINCREMENT, password TEXT NOT NULL, lastName TEXT NOT NULL, firstName TEXT, admin BOOLEAN NOT NULL, permission INTEGER NOT NULL, company TEXT )",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 40,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "1db467acc3fc67e3",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "CREATE machine",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE machine( machineName TEXT PRIMARY KEY NOT NULL, permission INTEGER NOT NULL, setUpTime INTEGER NOT NULL, cost INTEGER NOT NULL, materialConsumption INTEGER , area TEXT, factor REAL NOT NULL )",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 120,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "b0c93b542e6574c7",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "CREATE data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE data( userid INTEGER NOT NULL, machineName TEXT NOT NULL, start INTEGER NOT NULL, end INTEGER NOT NULL,setUpTime INTEGER NOT NULL, duration INTEGER NOT NULL, power INTEGER NOT NULL, PRIMARY KEY (userid, machineName, start ) FOREIGN KEY(userid) REFERENCES user(userid), FOREIGN KEY(machineName) REFERENCES machine(machineName))",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 160,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "ec9283dddc31dd45",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO user(password, lastName, firstName, admin, permission, company) VALUES( 12345, \"mustermann\", \"muster\", true, 5, NULL)",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 340,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "8aa75a1dd4a99369",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT machine",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO machine VALUES(\"test maschine\", 2, 5, 0.99, NULL, \"holz\", 1)",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 500,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "dbe79c46a10bd38d",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Set seq",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO sqlite_sequence VALUES ('user',99)",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 80,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "a1f7e7371a5f6f0f",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Aktive FK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "PRAGMA foreign_keys = ON;",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 260,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "4aa6c02d5e51f5e6",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Incorrrect INSERT data ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "PRAGMA foreign_keys = ON;",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 780,
        "wires": [
            [
                "c48ee34242888ca3"
            ]
        ]
    },
    {
        "id": "299f29f3b7502563",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT data (dummy)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO data VALUES(100, \"Schweißgerät\", 600000, 800000, 0, 5000,1200)",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 620,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "c5eafeb0c0fb0441",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering UserID",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 520,
        "y": 1340,
        "wires": [
            [
                "da8d8b4b6ea32fbc"
            ]
        ]
    },
    {
        "id": "20edfee4f6acf8e3",
        "type": "debug",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 1260,
        "wires": []
    },
    {
        "id": "da8d8b4b6ea32fbc",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"SELECT machineName, start, end, duration, power FROM user JOIN data USING (userid) WHERE userid =\" + msg.payload +\"  ORDER BY start \"}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1340,
        "wires": [
            [
                "06248a2bf64d415b"
            ]
        ]
    },
    {
        "id": "9e4623c096dcb77b",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "All Users",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT *  FROM user;",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 1140,
        "wires": [
            [
                "06248a2bf64d415b"
            ]
        ]
    },
    {
        "id": "370623b118471376",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "All Machines",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT *  FROM machine;",
        "payload": "",
        "payloadType": "date",
        "x": 510,
        "y": 1180,
        "wires": [
            [
                "06248a2bf64d415b"
            ]
        ]
    },
    {
        "id": "147ba4bf3580251b",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering machineName",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "test maschine",
        "payloadType": "str",
        "x": 540,
        "y": 1420,
        "wires": [
            [
                "01dda7236b043228"
            ]
        ]
    },
    {
        "id": "01dda7236b043228",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"SELECT userid, start, end, duration, power FROM data JOIN machine USING (machineName) WHERE machineName = '\"+ msg.payload +\"' ORDER BY start \"}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1420,
        "wires": [
            [
                "06248a2bf64d415b"
            ]
        ]
    },
    {
        "id": "712405cfd54c7dae",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering UserID",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 520,
        "y": 1380,
        "wires": [
            [
                "9015f1542d702347"
            ]
        ]
    },
    {
        "id": "9015f1542d702347",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"SELECT *  FROM user where userid=\" + msg.payload +\"\" };\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1380,
        "wires": [
            [
                "06248a2bf64d415b"
            ]
        ]
    },
    {
        "id": "9079df5ec294a3d0",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Alle Einträge von einem User:",
        "info": "",
        "x": 280,
        "y": 1340,
        "wires": []
    },
    {
        "id": "737ddfd9f2db8175",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Persönliche Daten eines Nutzers zurück geben:",
        "info": "",
        "x": 220,
        "y": 1380,
        "wires": []
    },
    {
        "id": "25be330f153ea315",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Alle Einträge zu einer Maschine:",
        "info": "",
        "x": 270,
        "y": 1420,
        "wires": []
    },
    {
        "id": "632ab0886d9286e4",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Anzahl der Nutzer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT COUNT(*) FROM user",
        "payload": "",
        "payloadType": "date",
        "x": 530,
        "y": 1220,
        "wires": [
            [
                "06248a2bf64d415b"
            ]
        ]
    },
    {
        "id": "3d4bc26a8b3ef990",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Anzahl der Maschinen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT COUNT(*) FROM machine",
        "payload": "",
        "payloadType": "date",
        "x": 540,
        "y": 1260,
        "wires": [
            [
                "06248a2bf64d415b"
            ]
        ]
    },
    {
        "id": "c310038d0b28f929",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Summe von Dauer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT SUM(duration) FROM data",
        "payload": "",
        "payloadType": "date",
        "x": 530,
        "y": 1300,
        "wires": [
            [
                "06248a2bf64d415b"
            ]
        ]
    },
    {
        "id": "bd8bde87bf696eb6",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "DROP user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE user",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 960,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "265a68b0ac9e42f3",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "DROP machine",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE machine",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 920,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "4f966b887d19bd1f",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "DROP data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE data",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 880,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "b5d3a715a73f6581",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 1350,
        "y": 1260,
        "wires": [
            [
                "20edfee4f6acf8e3"
            ]
        ]
    },
    {
        "id": "eeed63f5756c6c82",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "DB Queries:",
        "info": "## ",
        "x": 170,
        "y": 1060,
        "wires": []
    },
    {
        "id": "06248a2bf64d415b",
        "type": "subflow:2a14cb53da10968a",
        "z": "5d3034dc83dfbde2",
        "name": "find db path in local directory",
        "x": 1160,
        "y": 1260,
        "wires": [
            [
                "b5d3a715a73f6581"
            ]
        ]
    },
    {
        "id": "0e854629aa4dc9fc",
        "type": "subflow:2a14cb53da10968a",
        "z": "5d3034dc83dfbde2",
        "name": "find db path in local directory",
        "x": 820,
        "y": 360,
        "wires": [
            [
                "51843fcc4399d7e3"
            ]
        ]
    },
    {
        "id": "c48ee34242888ca3",
        "type": "subflow:2a14cb53da10968a",
        "z": "5d3034dc83dfbde2",
        "name": "find db path in local directory",
        "x": 820,
        "y": 640,
        "wires": [
            [
                "c297898b3378f444"
            ]
        ]
    },
    {
        "id": "a5dbc0104c659d3b",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1650113340",
        "payloadType": "str",
        "x": 590,
        "y": 1860,
        "wires": [
            [
                "fe9c056336bd191f",
                "4ea3c5183da93785"
            ]
        ]
    },
    {
        "id": "fe9c056336bd191f",
        "type": "moment",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-D HH:mm",
        "locale": "en-US",
        "output": "",
        "outputType": "msg",
        "outTz": "Europe/Berlin",
        "x": 820,
        "y": 1880,
        "wires": [
            [
                "4ea3c5183da93785"
            ]
        ]
    },
    {
        "id": "4ea3c5183da93785",
        "type": "debug",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1860,
        "wires": []
    },
    {
        "id": "d2db16d53739fa75",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2022-04-22 16:00",
        "payloadType": "str",
        "x": 610,
        "y": 1940,
        "wires": [
            [
                "b81337e6f0d45f20"
            ]
        ]
    },
    {
        "id": "b81337e6f0d45f20",
        "type": "moment",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "x",
        "locale": "en-US",
        "output": "",
        "outputType": "msg",
        "outTz": "Europe/Berlin",
        "x": 820,
        "y": 1940,
        "wires": [
            [
                "078e5446238161bb"
            ]
        ]
    },
    {
        "id": "078e5446238161bb",
        "type": "debug",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1940,
        "wires": []
    },
    {
        "id": "eddbcfd47fba54ee",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "timestampNow",
        "func": "timeNow = new Date().getTime();\nconst currentMonth =  new Date().getMonth()+1;\nconst nextMonth =  new Date().getMonth()+2;\n\nconst date2 = new Date('2022-04-22 16:00');\nconst date1 = new Date('2022-04-22 20:00');\nvar difference = date1.getTime() - date2.getTime();\n\n\nmsg.payload = (((difference / 1000) / 60)/ 60)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2020,
        "wires": [
            [
                "078e5446238161bb"
            ]
        ]
    },
    {
        "id": "c639bb0ca2191f52",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 580,
        "y": 2020,
        "wires": [
            [
                "eddbcfd47fba54ee"
            ]
        ]
    },
    {
        "id": "17ebf29cf2ccc1c7",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Time converting:",
        "info": "",
        "x": 400,
        "y": 1860,
        "wires": []
    },
    {
        "id": "4acf53a83e1e1e65",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "18000000",
        "payloadType": "str",
        "x": 580,
        "y": 2080,
        "wires": [
            [
                "8639e53d8c9029b8"
            ]
        ]
    },
    {
        "id": "8639e53d8c9029b8",
        "type": "moment",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH",
        "locale": "en-US",
        "output": "",
        "outputType": "msg",
        "outTz": "Europe/Berlin",
        "x": 820,
        "y": 2080,
        "wires": [
            [
                "1ec28b3e9561843a"
            ]
        ]
    },
    {
        "id": "1ec28b3e9561843a",
        "type": "debug",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 2080,
        "wires": []
    },
    {
        "id": "a030ecc9f1ee9bf2",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "getMonthFunk",
        "func": "timeStamp = msg.payload;\nd = new Date(timeStamp);\nmsg.payload = d.getMonth()+1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2120,
        "wires": [
            [
                "540c4819ab00eb87"
            ]
        ]
    },
    {
        "id": "540c4819ab00eb87",
        "type": "debug",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 2120,
        "wires": []
    },
    {
        "id": "bffeadd4697c11a0",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1647438540000",
        "payloadType": "num",
        "x": 600,
        "y": 2120,
        "wires": [
            [
                "a030ecc9f1ee9bf2",
                "7b2fb04228709f70"
            ]
        ]
    },
    {
        "id": "9c997e10abe5c642",
        "type": "debug",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 2340,
        "wires": []
    },
    {
        "id": "dc5eb7b4ec1027d3",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2022-04-22 20:00",
        "payloadType": "str",
        "x": 610,
        "y": 1980,
        "wires": [
            [
                "b81337e6f0d45f20"
            ]
        ]
    },
    {
        "id": "7fe3d92daac65f35",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering UserID",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 480,
        "y": 2420,
        "wires": [
            [
                "28c1577f38c9b74f"
            ]
        ]
    },
    {
        "id": "28c1577f38c9b74f",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "// Monat März\n\n\nconst start = new Date('2022-04-01').getTime();\nconst end = new Date('2022-05-01').getTime();\n\nvar msg = { \"topic\": \"SELECT machineName, start, end, duration, power FROM user JOIN data USING (userid) WHERE userid =\" + msg.payload +\" AND start >= \"+start+\" AND end < \"+end+\" ORDER BY start \"}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2420,
        "wires": [
            [
                "091c114549ca2c40"
            ]
        ]
    },
    {
        "id": "9796e509b5baef1d",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Alle Einträge von einem User für bestimmten Monat (März): ",
        "info": "",
        "x": 210,
        "y": 2380,
        "wires": []
    },
    {
        "id": "58e2a3f1f60c7639",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "checkingMonth",
        "func": "values = msg.payload;\n// Monat März\nconst newValues = values.filter( \n    (value) =>  new Date(value.start).getMonth()+1 == 3 \n);\n\nmsg.payload = newValues;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "ff636471edca36a5",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering UserID",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 480,
        "y": 2500,
        "wires": [
            [
                "e2b0ae097b625c5c"
            ]
        ]
    },
    {
        "id": "e2b0ae097b625c5c",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "const currentMonth =  new Date().getMonth()+1;\nconst nextMonth =  new Date().getMonth()+2;\n\nconst start = new Date('2022-'+ currentMonth +'-01').getTime();\nconst end = new Date('2022-'+ nextMonth +'-01').getTime();\n\nvar msg = { \"topic\": \"SELECT machineName, start, end, duration, power FROM user JOIN data USING (userid) WHERE userid =\" + msg.payload +\" AND start >= \"+start+\" AND end < \"+end+\" ORDER BY start \"}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2500,
        "wires": [
            [
                "93449dc8b3afb3cd"
            ]
        ]
    },
    {
        "id": "8dc11493e0ffc0dd",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "checkingMonth",
        "func": "values = msg.payload;\nconst newValues = values.filter( \n    (value) =>  new Date(value.start).getMonth()+1 == new Date().getMonth()+1 \n);\n\nmsg.payload = newValues;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "7b2fb04228709f70",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "getThisMonthFunk",
        "func": "msg.payload = new Date().getMonth()+1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2160,
        "wires": [
            [
                "540c4819ab00eb87"
            ]
        ]
    },
    {
        "id": "961eb7b66fa51dce",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Alle Einträge von einem User für aktuellen Monat: ",
        "info": "",
        "x": 240,
        "y": 2460,
        "wires": []
    },
    {
        "id": "ab5cfe6886bb3642",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "display in date-format",
        "func": "values = msg.payload;\nfor (let i = 0; i < values.length; ++i) {\n  values[i].start = new Date(values[i].start);\n  values[i].end = new Date(values[i].end);\n};\n\nmsg.payload = values;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 2300,
        "wires": [
            [
                "9c997e10abe5c642"
            ]
        ]
    },
    {
        "id": "3cc2b5fc1a0a8a13",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering UserID",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 480,
        "y": 2300,
        "wires": [
            [
                "f039a0826e1be4d3"
            ]
        ]
    },
    {
        "id": "f039a0826e1be4d3",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"SELECT machineName, start, end, duration, power FROM user JOIN data USING (userid) WHERE userid =\" + msg.payload +\"  ORDER BY start \"}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2300,
        "wires": [
            [
                "39b484536b20e5ec"
            ]
        ]
    },
    {
        "id": "c806cd8f818b2325",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Alle Einträge von einem User:",
        "info": "",
        "x": 240,
        "y": 2300,
        "wires": []
    },
    {
        "id": "06cbe08e6b882745",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT data (juli)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO data VALUES(100, \"Schweißgerät\", 1657975740000, 1657993740000, 0, 1657993740000-1657993740000, 1200)",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 660,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "ae3cbb56e3598da3",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT data (märz)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO data VALUES(100, \"Schweißgerät\", 1647075600000, 1647090000000, 0, 5000,1200)",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 700,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "67ce1738bced068a",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT data (april)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO data VALUES(100, \"Schweißgerät\", 1650636000000, 1650650400000, 0, 5000,1200)",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 740,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "94a80b516393dcda",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 1070,
        "y": 2300,
        "wires": [
            [
                "ab5cfe6886bb3642"
            ]
        ]
    },
    {
        "id": "39b484536b20e5ec",
        "type": "subflow:2a14cb53da10968a",
        "z": "5d3034dc83dfbde2",
        "name": "find db path in local directory",
        "x": 880,
        "y": 2300,
        "wires": [
            [
                "94a80b516393dcda"
            ]
        ]
    },
    {
        "id": "a74977dcf84dcda8",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 1070,
        "y": 2420,
        "wires": [
            [
                "9c997e10abe5c642"
            ]
        ]
    },
    {
        "id": "091c114549ca2c40",
        "type": "subflow:2a14cb53da10968a",
        "z": "5d3034dc83dfbde2",
        "name": "find db path in local directory",
        "x": 880,
        "y": 2420,
        "wires": [
            [
                "a74977dcf84dcda8"
            ]
        ]
    },
    {
        "id": "1adcb43543e66c45",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 1070,
        "y": 2500,
        "wires": [
            [
                "9c997e10abe5c642"
            ]
        ]
    },
    {
        "id": "93449dc8b3afb3cd",
        "type": "subflow:2a14cb53da10968a",
        "z": "5d3034dc83dfbde2",
        "name": "find db path in local directory",
        "x": 880,
        "y": 2500,
        "wires": [
            [
                "1adcb43543e66c45"
            ]
        ]
    },
    {
        "id": "45d8b6a1cec5ca73",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO user(password, lastName, firstName, admin, permission, company) VALUES( \"\", \"Doe\", \"John\", false, 2, NULL)",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 380,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "ffb60fddf111f41d",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT machine",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO machine VALUES(\"Schweißgerät\", 5, 2, 3, NULL, \"Metal\", 1)",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 540,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "062e1fadf2d0e360",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "func": "var userID = msg.payload.userid;\nvar maschinenName = msg.payload.machineName;\n\nmsg.topic = \"SELECT ( SELECT COUNT(*) FROM user WHERE userid =\"+userID+\") AS userExists, (SELECT count(*) FROM user JOIN machine on (user.permission >= machine.permission) WHERE userid =\"+userID+\" AND machineName='\"+maschinenName+\"') as permissionIsHighEnough\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 2580,
        "wires": [
            [
                "f42b56dc21b643d3"
            ]
        ]
    },
    {
        "id": "cfde61dcaec3a913",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering UserID",
        "props": [
            {
                "p": "payload.userid",
                "v": "1012",
                "vt": "num"
            },
            {
                "p": "payload.machineName",
                "v": "Schweißgerät",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 480,
        "y": 2580,
        "wires": [
            [
                "062e1fadf2d0e360"
            ]
        ]
    },
    {
        "id": "2bbd741e1f665a13",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 1070,
        "y": 2580,
        "wires": [
            [
                "9c997e10abe5c642",
                "2248ea642e4e9d67"
            ]
        ]
    },
    {
        "id": "f42b56dc21b643d3",
        "type": "subflow:2a14cb53da10968a",
        "z": "5d3034dc83dfbde2",
        "name": "find db path in local directory",
        "x": 880,
        "y": 2580,
        "wires": [
            [
                "2bbd741e1f665a13"
            ]
        ]
    },
    {
        "id": "2248ea642e4e9d67",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Datenbank Ausgabe auswerten",
        "func": "var userExists = msg.payload[0].userExists;\nvar permissionIsHighEnough = msg.payload[0].permissionIsHighEnough;\n\n\nif(userExists && permissionIsHighEnough){\n    //ad something to msg.payload like userExists = true and permission = true\n    msg.payload = \"userExists = true and permission = true\"\n} else if(userExists && !permissionIsHighEnough){\n    //ad something to msg.payload like userExists = true and permission = false\n        msg.payload = \"userExists = true and permission = false\"\n} else {\n    //ad something to msg.payload like userExists = false and permission = false\n        msg.payload = \"userExists = false and permission = false\"\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2580,
        "wires": [
            [
                "9c997e10abe5c642"
            ]
        ]
    },
    {
        "id": "2172d5fde8ac17e0",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO user(password, lastname, firstName, admin, permission, company) VALUES( \"janTorge\", \"Jan\", \"Schneider\", true, 5, \"HAW\")",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 420,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "f05dd48957da22f4",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT machine",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO machine VALUES(\"Säge\", 1, 1, 0, 0.49, \"Holz\", 1)",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 580,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "03193aab14237227",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO user(password, lastName, firstName, admin, permission, company) VALUES( \"tesla\", \"Elon\", \"Musk\", false, 1, \"Tesla\")",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 460,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "7ad8bbe3127c92b3",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "DELETE FROM machine",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DELETE FROM machine where machineName=\"Rohrbiegemaschine\"",
        "payload": "",
        "payloadType": "date",
        "x": 590,
        "y": 880,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "350471f6999ce3e2",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering machineName",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Schweißgerät",
        "payloadType": "str",
        "x": 540,
        "y": 1500,
        "wires": [
            [
                "1d0e02b732b0d06f"
            ]
        ]
    },
    {
        "id": "1d0e02b732b0d06f",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"DELETE FROM machine WHERE machineName = '\"+ msg.payload +\"' \"}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1500,
        "wires": [
            [
                "06248a2bf64d415b"
            ]
        ]
    },
    {
        "id": "85a052a93c7a8ab9",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering UserID",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "105",
        "payloadType": "str",
        "x": 520,
        "y": 1460,
        "wires": [
            [
                "3739466ce2b865f2"
            ]
        ]
    },
    {
        "id": "3739466ce2b865f2",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"DELETE FROM user where userid=\" + msg.payload +\"\" };\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1460,
        "wires": [
            [
                "06248a2bf64d415b"
            ]
        ]
    },
    {
        "id": "87799b4390aa606e",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Löschen von Nutzern",
        "info": "",
        "x": 300,
        "y": 1460,
        "wires": []
    },
    {
        "id": "eb5a35ac0a1bb824",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Löschen von Machinen",
        "info": "",
        "x": 300,
        "y": 1500,
        "wires": []
    },
    {
        "id": "85035fb37cdfb259",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"UPDATE machine SET permission=\"+msg.payload.permission+\", setUpTime=\"+msg.payload.setUpTime+\", cost=\"+msg.payload.cost+\", materialConsumption=\"+msg.payload.materialConsumption+\", area='\"+msg.payload.area+\"', factor=\"+msg.payload.factor+\" WHERE machineName = '\"+msg.payload.machineName+\"'\" };\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1580,
        "wires": [
            [
                "06248a2bf64d415b"
            ]
        ]
    },
    {
        "id": "e777d4d2b280a417",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering the values",
        "props": [
            {
                "p": "payload.userid",
                "v": "102",
                "vt": "num"
            },
            {
                "p": "payload.password",
                "v": "Jan",
                "vt": "str"
            },
            {
                "p": "payload.lastname",
                "v": "Schneider",
                "vt": "str"
            },
            {
                "p": "payload.firstName",
                "v": "Jan",
                "vt": "str"
            },
            {
                "p": "payload.admin",
                "v": "false",
                "vt": "str"
            },
            {
                "p": "payload.permission",
                "v": "3",
                "vt": "num"
            },
            {
                "p": "payload.company",
                "v": "HAW Hamburg",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 530,
        "y": 1540,
        "wires": [
            [
                "c4c3377a728fe17b"
            ]
        ]
    },
    {
        "id": "c4c3377a728fe17b",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"UPDATE user SET password='\"+msg.payload.password+\"', lastname='\"+msg.payload.lastname+\"', firstName='\"+msg.payload.firstName+\"', admin=\"+msg.payload.admin+\", permission=\"+msg.payload.permission+\", company='\"+msg.payload.company+\"' WHERE userid = \"+msg.payload.userid+\"\" };\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1540,
        "wires": [
            [
                "06248a2bf64d415b"
            ]
        ]
    },
    {
        "id": "4257800a0f41f52d",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Update von Nutzern",
        "info": "",
        "x": 290,
        "y": 1540,
        "wires": []
    },
    {
        "id": "2e2396b5a1c54d65",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Update von Machinen",
        "info": "",
        "x": 300,
        "y": 1580,
        "wires": []
    },
    {
        "id": "c9e2e364f33fb8e2",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering the values",
        "props": [
            {
                "p": "payload.machineName",
                "v": "test maschine",
                "vt": "str"
            },
            {
                "p": "payload.permission",
                "v": "2",
                "vt": "num"
            },
            {
                "p": "payload.setUpTime",
                "v": "2",
                "vt": "num"
            },
            {
                "p": "payload.cost",
                "v": "1",
                "vt": "num"
            },
            {
                "p": "payload.materialConsumption",
                "v": "0",
                "vt": "num"
            },
            {
                "p": "payload.area",
                "v": "Holz",
                "vt": "str"
            },
            {
                "p": "payload.factor",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 530,
        "y": 1580,
        "wires": [
            [
                "85035fb37cdfb259"
            ]
        ]
    },
    {
        "id": "a159593f4b7ae8ae",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "CREATE config",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE config( powerCost REAL NOT NULL)",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "64b7bb23dfdc69b8",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT powerCost",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO config VALUES(1.5)",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 820,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "b7cd957091796362",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "CREATE logs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE logs( id INTEGER, time INTEGER, message TEXT)",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 280,
        "wires": [
            [
                "0e854629aa4dc9fc"
            ]
        ]
    },
    {
        "id": "691097ccb4565ca4",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Erstmal nicht aktvieren!",
        "info": "",
        "x": 740,
        "y": 220,
        "wires": []
    },
    {
        "id": "f72b95fcd5fa2b54",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering the values",
        "props": [
            {
                "p": "payload.userid",
                "v": "102",
                "vt": "num"
            },
            {
                "p": "payload.machineName",
                "v": "Säge",
                "vt": "str"
            },
            {
                "p": "payload.start",
                "v": "2022-07-29 07:30",
                "vt": "str"
            },
            {
                "p": "payload.end",
                "v": "2022-04-29 11:10",
                "vt": "str"
            },
            {
                "p": "payload.setUpTime",
                "v": "1",
                "vt": "num"
            },
            {
                "p": "payload.power",
                "v": "999",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 530,
        "y": 1680,
        "wires": [
            [
                "442754dec319b7c1"
            ]
        ]
    },
    {
        "id": "442754dec319b7c1",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "var start = new Date(msg.payload.start).getTime();\nvar end = new Date(msg.payload.end).getTime();\n\nvar msg = { \"topic\": \"INSERT INTO data VALUES(\"+msg.payload.userid+\", '\"+msg.payload.machineName+\"', \"+start+\", \"+end+\", \"+msg.payload.setUpTime+\", \"+(end-start)+\", \"+msg.payload.power+\")\" };\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1680,
        "wires": [
            [
                "06248a2bf64d415b"
            ]
        ]
    },
    {
        "id": "e88103ee9b848937",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Data ",
        "info": "",
        "x": 350,
        "y": 1680,
        "wires": []
    },
    {
        "id": "e85747894aceec43",
        "type": "function",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Aufsplitten des Inputs",
        "func": "\nvar output = msg.payload.split(\" \");\n\nvar nodeID = parseInt(output[0]);\nvar power1 = parseFloat(output[1]);\nvar power2 = parseFloat(output[2]);\nvar power3 = parseFloat(output[3]);\nvar power4 = parseFloat(output[4]);\nvar power5 = parseFloat(output[5]);\nvar power6 = parseFloat(output[6]);\nvar power7 = parseFloat(output[7]);\n\nvar kreissaege = {payload: power1, machineName: \"Kreissäge\"};\nvar tischkreissaege = {payload: power2, machineName: \"Tischkreissäge\"};\nvar hobel = {payload: power3, machineName: \"Hobel\"};\nvar bandschleifer = {payload: power4, machineName: \"Bandschleifer\"};\nvar drehmaschine = {payload: power5, machineName: \"Drehmaschine\"};\nvar kappsaege = {payload: power6, machineName: \"Kappsäge\"};\nvar schweissgeraet = {payload: power7, machineName: \"Schweißgerät\"};\n\nreturn [msg, \n        kreissaege, \n        tischkreissaege, \n        hobel, \n        bandschleifer, \n        drehmaschine, \n        kappsaege, \n        schweissgeraet];",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 560,
        "wires": [
            [
                "5e56578f2c78f47d"
            ],
            [
                "bfd408908909c8f6"
            ],
            [
                "40e0e3149ced7e58"
            ],
            [
                "feddcaf095aaba6f"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "bd1d5435acad84d6",
        "type": "serial in",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Serieller Input - Strommodul",
        "serial": "189d98b6e10797a1",
        "x": 260,
        "y": 560,
        "wires": [
            [
                "e85747894aceec43"
            ]
        ]
    },
    {
        "id": "2c01aa955659f634",
        "type": "comment",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Link zur Erklärung",
        "info": "http://lechacal.com/wiki/index.php?title=RPICT_and_Node-Red_hosted_on_Raspberrypi",
        "x": 510,
        "y": 480,
        "wires": []
    },
    {
        "id": "2ef8075276287a84",
        "type": "collection",
        "z": "56fe256bdc6888ea",
        "g": "69570ac14998a30b",
        "name": "CurrentMessuringBuffer",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": false,
        "action": "get entries",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "topic",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "str",
        "outputs": 1,
        "x": 470,
        "y": 1380,
        "wires": [
            [
                "94d5443828424b63"
            ]
        ]
    },
    {
        "id": "9ad752c7eb2f77c6",
        "type": "inject",
        "z": "56fe256bdc6888ea",
        "g": "69570ac14998a30b",
        "name": "Get List",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "key3",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 1380,
        "wires": [
            [
                "2ef8075276287a84"
            ]
        ]
    },
    {
        "id": "ea629855e546870b",
        "type": "power-monitor",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Drehmaschine Trigger",
        "startthreshold": "42",
        "stopthreshold": "42",
        "startafter": 1,
        "stopafter": 1,
        "energydecimals": 4,
        "emitidle": false,
        "x": 820,
        "y": 600,
        "wires": [
            [
                "5eb7685e8e5bbc85"
            ]
        ]
    },
    {
        "id": "bfd408908909c8f6",
        "type": "power-monitor",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Kreissäge Trigger",
        "startthreshold": "42",
        "stopthreshold": "42",
        "startafter": 1,
        "stopafter": 1,
        "energydecimals": 4,
        "emitidle": false,
        "x": 810,
        "y": 440,
        "wires": [
            [
                "5eb7685e8e5bbc85"
            ]
        ]
    },
    {
        "id": "40e0e3149ced7e58",
        "type": "power-monitor",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Tischkreissäge Trigger",
        "startthreshold": "42",
        "stopthreshold": "42",
        "startafter": 1,
        "stopafter": 1,
        "energydecimals": 4,
        "emitidle": false,
        "x": 820,
        "y": 480,
        "wires": [
            [
                "5eb7685e8e5bbc85"
            ]
        ]
    },
    {
        "id": "feddcaf095aaba6f",
        "type": "power-monitor",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Hobel Trigger",
        "startthreshold": "42",
        "stopthreshold": "42",
        "startafter": 1,
        "stopafter": 1,
        "energydecimals": 4,
        "emitidle": false,
        "x": 800,
        "y": 520,
        "wires": [
            [
                "5eb7685e8e5bbc85"
            ]
        ]
    },
    {
        "id": "f8855c74fcdf9766",
        "type": "power-monitor",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Bandschleifer Trigger",
        "startthreshold": "42",
        "stopthreshold": "42",
        "startafter": 1,
        "stopafter": 1,
        "energydecimals": 4,
        "emitidle": false,
        "x": 820,
        "y": 560,
        "wires": [
            [
                "5eb7685e8e5bbc85"
            ]
        ]
    },
    {
        "id": "4ea50d0d4145cfa9",
        "type": "power-monitor",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Kappsäge Trigger",
        "startthreshold": "42",
        "stopthreshold": "42",
        "startafter": 1,
        "stopafter": 1,
        "energydecimals": 4,
        "emitidle": false,
        "x": 810,
        "y": 640,
        "wires": [
            [
                "5eb7685e8e5bbc85"
            ]
        ]
    },
    {
        "id": "f87a3a14e4c84c77",
        "type": "power-monitor",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Schweißgerät Trigger",
        "startthreshold": "42",
        "stopthreshold": "42",
        "startafter": 1,
        "stopafter": 1,
        "energydecimals": 4,
        "emitidle": false,
        "x": 820,
        "y": 680,
        "wires": [
            [
                "5eb7685e8e5bbc85"
            ]
        ]
    },
    {
        "id": "5e56578f2c78f47d",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 400,
        "wires": []
    },
    {
        "id": "b0a4c113bcfd75d1",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 640,
        "wires": []
    },
    {
        "id": "927615031fb184de",
        "type": "function",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Daten für Bestehenden Eintrag erweitern",
        "func": "\n//when messuring starts, the setup time for the machine ends\nvar setupEndTime = new Date().getTime();\n\nmsg.payload.setupDuration = (setupEndTime - msg.payload.setupStartTime);\nmsg.payload.startMessuringTime = setupEndTime;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 520,
        "wires": [
            [
                "1a1cf964fd8edaf0",
                "10928063098554dd"
            ]
        ]
    },
    {
        "id": "c811bdda2c2e41dc",
        "type": "switch",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "",
        "property": "messuring.event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "stop",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1370,
        "y": 560,
        "wires": [
            [
                "927615031fb184de"
            ],
            [
                "198550b3bf6c8b23",
                "6381be337809da09"
            ]
        ]
    },
    {
        "id": "94d5443828424b63",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "69570ac14998a30b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1380,
        "wires": []
    },
    {
        "id": "272e6cb5dee9ba4c",
        "type": "inject",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Test Input Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "11 42.27 45.19 33.11",
        "payloadType": "str",
        "x": 240,
        "y": 440,
        "wires": [
            [
                "e85747894aceec43"
            ]
        ]
    },
    {
        "id": "5eb7685e8e5bbc85",
        "type": "change",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "messuring",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 560,
        "wires": [
            [
                "b0a4c113bcfd75d1",
                "e8e5cb8219247199"
            ]
        ],
        "info": "Die Messwerte sind derzeit im payload gespeichert.\nWenn wir anschließen einen Eintrag zu der entsprechenden Maschine aus der Liste der Maschinen auslesen, werden die Messwerte überschrieben.\nDaher werden die Messwerte hier unter messuring zwischengespreichert und sind über das Property auch noch im späteren Verlauf des Flows abrufbar."
    },
    {
        "id": "33762853f8fd0635",
        "type": "inject",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Test Input End",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "11 30.27 32.19 33.11",
        "payloadType": "str",
        "x": 230,
        "y": 480,
        "wires": [
            [
                "e85747894aceec43"
            ]
        ]
    },
    {
        "id": "10928063098554dd",
        "type": "collection",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Eintrag erweitern",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": false,
        "action": "set",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "payload.machineName",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "msg",
        "outputs": 1,
        "x": 2050,
        "y": 520,
        "wires": [
            [
                "72df1a9f84434816"
            ]
        ]
    },
    {
        "id": "1a1cf964fd8edaf0",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 440,
        "wires": []
    },
    {
        "id": "a67b5a153e359c44",
        "type": "function",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Bestehenden Eintrag um Messwert erweitern",
        "func": "\nmsg.payload.messuringDuration = msg.messuring.time;\nmsg.payload.energy = msg.messuring.energy\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 640,
        "wires": [
            [
                "f131cc992d7af3be",
                "c01ff320764ef67f"
            ]
        ]
    },
    {
        "id": "e3a1c266dd789867",
        "type": "collection",
        "z": "56fe256bdc6888ea",
        "g": "69570ac14998a30b",
        "name": "CurrentMessuringBuffer",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": true,
        "action": "clear",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "topic",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "msg",
        "outputs": 1,
        "x": 470,
        "y": 1320,
        "wires": [
            [
                "3af81448c05df57a"
            ]
        ]
    },
    {
        "id": "3af81448c05df57a",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "69570ac14998a30b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1320,
        "wires": []
    },
    {
        "id": "5f0478b99f6bcbe2",
        "type": "inject",
        "z": "56fe256bdc6888ea",
        "g": "69570ac14998a30b",
        "name": "delet",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Kreissäge",
        "payload": "",
        "payloadType": "str",
        "x": 210,
        "y": 1320,
        "wires": [
            [
                "e3a1c266dd789867"
            ]
        ]
    },
    {
        "id": "6dd2888976cb3d05",
        "type": "collection",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Eintrag erweitern",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": false,
        "action": "set",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "payload.machineName",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "msg",
        "outputs": 1,
        "x": 2630,
        "y": 800,
        "wires": [
            [
                "40f2815f320a7491"
            ]
        ]
    },
    {
        "id": "367781f0503baadb",
        "type": "comment",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Allgemeines Konto Daten direkt weg schreiben",
        "info": "",
        "x": 2090,
        "y": 600,
        "wires": []
    },
    {
        "id": "6cd10282e0de543b",
        "type": "collection",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Eintrag zurücksetzten",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": false,
        "action": "set",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "payload.machineName",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "msg",
        "outputs": 1,
        "x": 2780,
        "y": 660,
        "wires": [
            [
                "c9332917b00e8832"
            ]
        ]
    },
    {
        "id": "2ea929b1ffe168fb",
        "type": "inject",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "Setze Timer für auto Logout",
        "props": [
            {
                "p": "timer",
                "v": "900000",
                "vt": "num"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "x": 280,
        "y": 980,
        "wires": [
            [
                "f6be19d698c8e981"
            ]
        ]
    },
    {
        "id": "f6be19d698c8e981",
        "type": "collection",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "Hole Einträge",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": false,
        "action": "get entries",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "topic",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "str",
        "outputs": 1,
        "x": 540,
        "y": 980,
        "wires": [
            [
                "bc0ec04e16a6089e"
            ]
        ]
    },
    {
        "id": "7d90581007d7da7f",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 980,
        "wires": []
    },
    {
        "id": "2b1b2c4302317ef9",
        "type": "inject",
        "z": "56fe256bdc6888ea",
        "g": "bdd517b93ca42ddf",
        "name": "Nach dem Neustart automatisch triggern",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 320,
        "y": 160,
        "wires": [
            [
                "fe20e42f5546c86e"
            ]
        ]
    },
    {
        "id": "fe20e42f5546c86e",
        "type": "switch",
        "z": "56fe256bdc6888ea",
        "g": "bdd517b93ca42ddf",
        "name": "Check ob CurrentMessuringObject ist null",
        "property": "CurrentMessuringObject",
        "propertyType": "global",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 100,
        "wires": [
            [
                "24a99a43b6fd867b"
            ],
            [
                "24a99a43b6fd867b"
            ]
        ]
    },
    {
        "id": "24a99a43b6fd867b",
        "type": "function",
        "z": "56fe256bdc6888ea",
        "g": "bdd517b93ca42ddf",
        "name": "Array mit Einträgen erstellen",
        "func": "\nvar entryArray = [\n    {\n        machineName: \"Kreissäge\", \n        userID: 100, \n        startMessuringTime: null,\n        messuringDuration: null,\n        lastMessuringTime: null, \n        setupStartTime: null, \n        setupDuration: null, \n        energy: null,\n        ip: null\n    },\n        \n    {\n        machineName: \"Tischkreissäge\", \n        userID: 100, \n        startMessuringTime: null,\n        messuringDuration: null,\n        lastMessuringTime: null, \n        setupStartTime: null, \n        setupDuration: null, \n        energy: null,\n        ip: null   \n    },\n    \n    {\n        machineName: \"Hobel\", \n        userID: 100, \n        startMessuringTime: null, \n        lastMessuringTime: null, \n        setupTime: null, \n        setupStartTime: null, \n        messuringDuration: null, \n        energy: null,\n        ip: null\n    },\n    \n    {\n        machineName: \"Bandschleifer\", \n        userID: 100, \n        startMessuringTime: null,\n        messuringDuration: null,\n        lastMessuringTime: null, \n        setupTime: null, \n        setupStartTime: null, \n        energy: null,\n        ip: null\n    },\n    \n    {\n        machineName: \"Drehmaschine\", \n        userID: 100, \n        startMessuringTime: null, \n        messuringDuration: null,\n        lastMessuringTime: null, \n        setupStartTime: null, \n        setupDuration: null, \n        energy: null,\n        ip: null\n    },\n    \n    {\n        machineName: \"Kappsäge\", \n        userID: 100, \n        startMessuringTime: null, \n        messuringDuration: null,\n        lastMessuringTime: null, \n        setupStartTime: null, \n        setupDuration: null, \n        energy: null,\n        ip: null\n    },\n    \n    {\n        machineName: \"Schweißgerät\", \n        userID: 100, \n        startMessuringTime: null,\n        messuringDuration: null, \n        lastMessuringTime: null, \n        setupStartTime: null, \n        setupDuration: null,\n        energy: null,\n        ip: null\n    },\n];\n\nmsg.payload = entryArray;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 160,
        "wires": [
            [
                "455ad6e4f3c1a6c2"
            ]
        ]
    },
    {
        "id": "9a61e006b06aea53",
        "type": "array-loop",
        "z": "56fe256bdc6888ea",
        "g": "bdd517b93ca42ddf",
        "name": "Schleife für jeden Eintrag von array",
        "key": "al9a61e006b06aea53",
        "keyType": "msg",
        "reset": false,
        "resetValue": "value-null",
        "array": "array",
        "arrayType": "msg",
        "x": 1380,
        "y": 100,
        "wires": [
            [],
            [
                "6bc8cd7a7aa88c70"
            ]
        ]
    },
    {
        "id": "a591606526e6c6e1",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "bdd517b93ca42ddf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 160,
        "wires": []
    },
    {
        "id": "455ad6e4f3c1a6c2",
        "type": "change",
        "z": "56fe256bdc6888ea",
        "g": "bdd517b93ca42ddf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "array",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 100,
        "wires": [
            [
                "9a61e006b06aea53"
            ]
        ]
    },
    {
        "id": "6bc8cd7a7aa88c70",
        "type": "collection",
        "z": "56fe256bdc6888ea",
        "g": "bdd517b93ca42ddf",
        "name": "Eintrag in Liste anlegen",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": true,
        "action": "insert",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "payload.machineName",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "msg",
        "outputs": 1,
        "x": 1370,
        "y": 180,
        "wires": [
            [
                "9a61e006b06aea53",
                "a591606526e6c6e1"
            ]
        ]
    },
    {
        "id": "9b74d88b44c7ad75",
        "type": "comment",
        "z": "56fe256bdc6888ea",
        "g": "69570ac14998a30b",
        "name": "Test Trigger für die Zwischenspeicherliste",
        "info": "",
        "x": 300,
        "y": 1280,
        "wires": []
    },
    {
        "id": "bc0ec04e16a6089e",
        "type": "change",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "array",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1060,
        "wires": [
            [
                "f53a46c755b4cebd"
            ]
        ]
    },
    {
        "id": "f53a46c755b4cebd",
        "type": "array-loop",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "Schleife durch alle Einträge",
        "key": "alf53a46c755b4cebd",
        "keyType": "msg",
        "reset": false,
        "resetValue": "value-null",
        "array": "array",
        "arrayType": "msg",
        "x": 860,
        "y": 980,
        "wires": [
            [],
            [
                "4a061ccc7f34d9dd"
            ]
        ]
    },
    {
        "id": "32519552d91806ad",
        "type": "function",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "Prüfe ob Timer abgelaufen ist",
        "func": "\n//If last messuring was more than 15 minutes ago\nif(new Date().getTime() - msg.payload[1].lastMessuringTime >= msg.timer){\n    msg.payload = msg.payload[1];\n    return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1060,
        "wires": [
            [
                "7d90581007d7da7f",
                "5ad95efe7cc760f3"
            ]
        ]
    },
    {
        "id": "b78e456aca118fb3",
        "type": "collection",
        "z": "56fe256bdc6888ea",
        "g": "69570ac14998a30b",
        "name": "CurrentMessuringBuffer",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": false,
        "action": "set",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "payload.machineName",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "msg",
        "outputs": 1,
        "x": 470,
        "y": 1440,
        "wires": [
            [
                "e6b116c3c3a0bbe6"
            ]
        ]
    },
    {
        "id": "3973b7e4608c75ab",
        "type": "inject",
        "z": "56fe256bdc6888ea",
        "g": "69570ac14998a30b",
        "name": "Edit Timer",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"machineName\":\"Tischkreissäge\",\"userID\":100,\"startMessuringTime\":null,\"messuringDuration\":null,\"lastMessuringTime\":1666651167650,\"setupStartTime\":null,\"setupDuration\":null,\"energy\":null,\"ip\":null}",
        "payloadType": "json",
        "x": 220,
        "y": 1440,
        "wires": [
            [
                "b78e456aca118fb3"
            ]
        ]
    },
    {
        "id": "e6b116c3c3a0bbe6",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "69570ac14998a30b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1440,
        "wires": []
    },
    {
        "id": "4a061ccc7f34d9dd",
        "type": "switch",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "Prüfe ob schon eine Messung vorliegt",
        "property": "payload[1].lastMessuringTime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 1060,
        "wires": [
            [
                "f53a46c755b4cebd"
            ],
            [
                "32519552d91806ad"
            ]
        ]
    },
    {
        "id": "e8e5cb8219247199",
        "type": "collection",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Hole Eintrag für Maschine",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": false,
        "action": "get value",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "machineName",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "msg",
        "outputs": 1,
        "x": 1270,
        "y": 500,
        "wires": [
            [
                "c811bdda2c2e41dc"
            ]
        ]
    },
    {
        "id": "198550b3bf6c8b23",
        "type": "switch",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "User an Maschine angemeldet?",
        "property": "payload.userID",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "100",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "100",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1670,
        "y": 700,
        "wires": [
            [
                "a67b5a153e359c44"
            ],
            [
                "20921d3736e8d107"
            ]
        ]
    },
    {
        "id": "72df1a9f84434816",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 440,
        "wires": []
    },
    {
        "id": "65871ea9527c1ea3",
        "type": "comment",
        "z": "56fe256bdc6888ea",
        "g": "bdd517b93ca42ddf",
        "name": "Hier keine Code Liste erstellen sondern einzelne Nodes!",
        "info": "",
        "x": 1460,
        "y": 220,
        "wires": []
    },
    {
        "id": "67f0f50d1f3e59c5",
        "type": "function",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Bestehende Messung in Eintrag um Messwerte erweitern",
        "func": "\nvar messuringEndTime = new Date().getTime();\n\n//sum existing messuring values with new values\nmsg.payload.messuringDuration = msg.payload.messuringDuration + msg.messuring.time;\nmsg.payload.lastMessuringTime = messuringEndTime;\nmsg.payload.energy = msg.payload.energy + msg.messuring.energy\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2270,
        "y": 860,
        "wires": [
            [
                "6dd2888976cb3d05"
            ]
        ]
    },
    {
        "id": "6381be337809da09",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 660,
        "wires": []
    },
    {
        "id": "f131cc992d7af3be",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2390,
        "y": 580,
        "wires": []
    },
    {
        "id": "d3d96a5c0c10b29f",
        "type": "function",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Properties im Eintrag zurück setzten",
        "func": "\nvar returnObject = {\n    machineName: msg.machineName,\n    userID: 100, \n    startMessuringTime: null,\n    messuringDuration: null,\n    lastMessuringTime: null, \n    setupStartTime: null, \n    setupDuration: null, \n    energy: null,\n    ip: null\n}\n\nmsg.payload = returnObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2790,
        "y": 580,
        "wires": [
            [
                "6cd10282e0de543b"
            ]
        ]
    },
    {
        "id": "20921d3736e8d107",
        "type": "switch",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Erste Messung?",
        "property": "payload.energy",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1920,
        "y": 800,
        "wires": [
            [
                "2796066df1a2e319"
            ],
            [
                "67f0f50d1f3e59c5"
            ]
        ]
    },
    {
        "id": "2796066df1a2e319",
        "type": "function",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Eintrag um Messwerte erweitern",
        "func": "\nvar messuringEndTime = new Date().getTime();\n\nmsg.payload.messuringDuration = msg.messuring.time;\nmsg.payload.lastMessuringTime = messuringEndTime;\nmsg.payload.energy = msg.messuring.energy\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 800,
        "wires": [
            [
                "6dd2888976cb3d05"
            ]
        ]
    },
    {
        "id": "40f2815f320a7491",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2810,
        "y": 800,
        "wires": []
    },
    {
        "id": "82162ffd23778a1f",
        "type": "queuedsqlite",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 2550,
        "y": 700,
        "wires": [
            [
                "c9332917b00e8832"
            ]
        ]
    },
    {
        "id": "712dd35a6f7645a7",
        "type": "subflow:2a14cb53da10968a",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "find db path in local directory",
        "x": 2340,
        "y": 700,
        "wires": [
            [
                "82162ffd23778a1f"
            ]
        ]
    },
    {
        "id": "c01ff320764ef67f",
        "type": "function",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "Eintrag in DB schreiben",
        "func": "var userID = msg.payload.userID;\n\nvar machineName = msg.payload.machineName;\n\nvar setupDuration = msg.payload.setupDuration;\n\nvar startMessuringTime = msg.payload.startMessuringTime;\n\nvar messuringDuration = msg.payload.messuringDuration;\n\nvar power = msg.payload.energy;\n\n//Strings wie machinenName muss in Anführungszeichen gesetzt werden. Das ASCII Zeichen dafür ist '\\u0022'\nmsg.topic = \"INSERT INTO data VALUES (\" + userID + \",\" + '\\u0022' + maschineName + '\\u0022' + \",\" + startMessuringTime + \",\" + (startMessuringTime + messuringDuration) + \",\" + setupDuration + \",\" + messuringDuration + \",\" + power + \")\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 640,
        "wires": [
            [
                "712dd35a6f7645a7",
                "d3d96a5c0c10b29f"
            ]
        ]
    },
    {
        "id": "c9332917b00e8832",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3010,
        "y": 700,
        "wires": []
    },
    {
        "id": "4a25446c0c4da559",
        "type": "comment",
        "z": "56fe256bdc6888ea",
        "g": "fc2cb2ff3b2df9ef",
        "name": "TODO Ende muss noch aus DB raus!",
        "info": "",
        "x": 2730,
        "y": 540,
        "wires": []
    },
    {
        "id": "09f7804909e0af20",
        "type": "subflow:2a14cb53da10968a",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "find db path in local directory",
        "x": 1800,
        "y": 1060,
        "wires": [
            [
                "fc6d41b917715a63"
            ]
        ]
    },
    {
        "id": "5ad95efe7cc760f3",
        "type": "function",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "Eintrag in DB schreiben",
        "func": "var userID = msg.payload.userID;\n\nvar machineName = msg.payload.machineName;\n\nvar setupDuration = msg.payload.setupDuration;\n\nvar startMessuringTime = msg.payload.startMessuringTime;\n\nvar messuringDuration = msg.payload.messuringDuration;\n\nvar power = msg.payload.energy;\n\n//Strings wie machinenName muss in Anführungszeichen gesetzt werden. Das ASCII Zeichen dafür ist '\\u0022'\nmsg.topic = \"INSERT INTO data VALUES (\" + userID + \",\" + '\\u0022' + maschineName + '\\u0022' + \",\" + startMessuringTime + \",\" + (startMessuringTime + messuringDuration) + \",\" + setupDuration + \",\" + messuringDuration + \",\" + power + \")\";\n\nmsg.clientAdress = \"http://\" + msg.payload.ip + \"/autoLogout\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1060,
        "wires": [
            [
                "09f7804909e0af20",
                "9a5677174650b892",
                "7047bcea21dc8e0d"
            ]
        ]
    },
    {
        "id": "fc6d41b917715a63",
        "type": "queuedsqlite",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "msg.database",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 2050,
        "y": 1060,
        "wires": [
            [
                "55099211e08bdcb5"
            ]
        ]
    },
    {
        "id": "81e58d3615229780",
        "type": "collection",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "Eintrag zurücksetzten",
        "collection": "CurrentMessuringObject",
        "collectionInputType": "global",
        "collectionType": "Object",
        "createCollection": false,
        "action": "set",
        "onConflict": "exception",
        "warnOnConflict": true,
        "keyOrIndex": "payload.machineName",
        "keyInputType": "msg",
        "value": "payload",
        "valueInputType": "msg",
        "outputs": 1,
        "x": 2200,
        "y": 1000,
        "wires": [
            [
                "55099211e08bdcb5"
            ]
        ]
    },
    {
        "id": "9a5677174650b892",
        "type": "function",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "Properties im Eintrag zurück setzten",
        "func": "\nvar returnObject = {\n    machineName: msg.machineName,\n    userID: 100, \n    startMessuringTime: null,\n    messuringDuration: null,\n    lastMessuringTime: null, \n    setupStartTime: null, \n    setupDuration: null, \n    energy: null,\n    ip: null\n}\n\nmsg.payload = returnObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 1000,
        "wires": [
            [
                "81e58d3615229780"
            ]
        ]
    },
    {
        "id": "55099211e08bdcb5",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2430,
        "y": 1060,
        "wires": []
    },
    {
        "id": "c40620de0f616fc8",
        "type": "http request",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "Info an Mikrocontroller zum Ausloggen",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 2150,
        "y": 1120,
        "wires": [
            [
                "55099211e08bdcb5"
            ]
        ]
    },
    {
        "id": "7047bcea21dc8e0d",
        "type": "change",
        "z": "56fe256bdc6888ea",
        "g": "27cfd54d06969523",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "post",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "clientAdress",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "6396a60985c26813",
        "type": "serial in",
        "z": "56fe256bdc6888ea",
        "name": "Serieller Input TEST für Schwellwerte",
        "serial": "189d98b6e10797a1",
        "x": 270,
        "y": 1600,
        "wires": [
            [
                "5e9cf3b4afe04546"
            ]
        ]
    },
    {
        "id": "5e9cf3b4afe04546",
        "type": "debug",
        "z": "56fe256bdc6888ea",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1600,
        "wires": []
    }
]